name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    # We run inside the 22.04 docker container until its environment as a virtual environment
    # This is needed because we need cgroups2
    container: ubuntu:jammy
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Docker and Prereqs
      run: |
         apt-get update
         apt-get install build-essential python3 libclang-common-12-dev llvm-12-dev zlib1g-dev -y
         apt-get install runc containerd docker.io curl python3 python-is-python3 python3-setuptools -y
         # gpasswd -a $USER docker
    - name: Install rustc and clippy nightly
      uses: actions-rs/toolchain@v1
      with:
         profile: minimal
         toolchain: nightly
         override: true
         components: cargo, rustc, clippy, rustfmt
         target: wasm32-unknown-unknown
    - name: Setup rust dependency caching
      uses: Swatinem/rust-cache@v1
      with:
         working-directory: wasm-worker
    - name: Install golang
      uses: actions/setup-go@v3
      with:
         go-version: '>=1.17.0'
    - name: Install cross
      run: cargo install cross
    - name: Build OpenLambda
      run: |
         make ol install-python-bindings imgs/lambda
         make wasm-worker wasm-functions #make native-functions
    - name: Test Python (Docker)
    # not all features are supported by docker yet, so we only run some of the tests
       run: ./scripts/test.py --worker_type=docker --test_filter=stress_one_lambda,numpy,ping_test
    - name: Test Python (SOCK)
      run: ./scripts/test.py --worker_type=sock
    - name: Test Binaries (WebAssembly)
      run: ./script/bin-test.py --worker_type=wasm
    # Broken inside Docker
    #    - name: Test Binaries (SOCK)
    #      run: ./scripts/bin-test.py --worker_type=sock
    - name: Test SOCK
      run: ./scripts/sock-test.py
    - name: Linting
      run: make lint
