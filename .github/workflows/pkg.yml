name: PKG

on:
  schedule:
    - cron: '30 16 * * *' # 4:30pm every day

env:
  CARGO_TERM_COLOR: always

jobs:
  continuous-integration:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Docker and Prereqs
      # This uses a workaround for a known issue with docker. See here: https://github.com/actions/virtual-environments/issues/5490#issuecomment-1118328567
      run: |
         sudo apt-get update
         sudo apt-get install build-essential python3 libclang-common-12-dev llvm-12-dev zlib1g-dev -y
         sudo apt-get install curl python3 python-is-python3 python3-setuptools python3-pip -y
         sudo apt-get install runc containerd docker.io -y || true
         sudo rm /etc/docker/daemon.json
         sudo systemctl restart docker
         sudo gpasswd -a $USER docker
         pip3 install pylint
    - name: Install rustc and clippy nightly
      uses: actions-rs/toolchain@v1
      with:
         profile: minimal
         toolchain: nightly-2022-07-25
         override: true
         components: cargo, rustc, clippy, rustfmt
         target: wasm32-unknown-unknown
    - name: Setup rust dependency caching
      uses: Swatinem/rust-cache@v1
      with:
         working-directory: wasm-worker
    - name: Install golang
      uses: actions/setup-go@v3
      with:
         go-version: '>=1.21.0'
    - name: Install cross
      run: cargo install cross
    - name: Build OpenLambda
      run: |
        make ol imgs/lambda wasm-worker wasm-functions native-functions container-proxy
        sudo make install-python-bindings
    - name: Test PyPI Packages
      run: sudo ./scripts/package_tests.py
      timeout-minutes: 90
